{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ojjas\\\\Desktop\\\\real_patti\\\\frontend\\\\src\\\\pages\\\\Table.js\",\n  _s = $RefreshSig$();\n// table.js\nimport React, { useEffect, useState } from \"react\";\nimport './Table.css';\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table() {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [poolMoney, setPoolMoney] = useState(0);\n  const [username, setUsername] = useState(\"\"); // Store username here\n  const numberOfPlayers = players.length;\n  const handleStart = () => {\n    socket.emit(\"handleStart\"); // Emit handleStart event\n    window.location.reload(); // Reload page to reflect updated data\n  };\n  const handleChaal = () => {\n    socket.emit(\"handleChaal\", username); // Emit handleChaal with the current username\n  };\n  useEffect(() => {\n    const newSocket = io(\"http://localhost:9000\");\n\n    // Listen for playerHistory event from the backend\n    newSocket.on(\"playerHistory\", playerHistory => {\n      setPlayers(playerHistory);\n\n      // Optionally, you could set the username here if the username is part of the player object\n      const player = playerHistory.find(p => p.id === newSocket.id);\n      if (player) {\n        setUsername(player.userName); // Set username after player connects\n      }\n    });\n\n    // Listen for poolMoney event from the backend\n    newSocket.on(\"poolMoney\", pool_money => {\n      setPoolMoney(pool_money);\n    });\n    return () => {\n      newSocket.disconnect(); // Clean up the connection on component unmount\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table_block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/table_image.png\",\n        alt: \"Table Image\",\n        className: \"table_image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"players_list\",\n        children: [players.map((player, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [player.userName, \": \", player.money]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start\",\n          onClick: handleStart,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pool_money\",\n        children: poolMoney\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/moves_image.png\",\n        className: \"movesbg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"moves_block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"first_section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"first\",\n            onClick: handleChaal,\n            children: \"Chaal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"second\",\n            children: \"Second\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"second_section\",\n          children: [/*#__PURE__*/_jsxDEV(\"text\", {\n            className: \"score\",\n            children: \"750\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            className: \"status\",\n            children: \"Seen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            children: [username, \"'s Turn\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"third_section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"third\",\n            children: \"2x Chaal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fourth\",\n            children: \"Fourth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"f2eJ0wXX9pkJgmbOVmzaFhAEyp4=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","Table","_s","players","setPlayers","poolMoney","setPoolMoney","username","setUsername","numberOfPlayers","length","handleStart","socket","emit","window","location","reload","handleChaal","newSocket","on","playerHistory","player","find","p","id","userName","pool_money","disconnect","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","index","money","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ojjas/Desktop/real_patti/frontend/src/pages/Table.js"],"sourcesContent":["// table.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport './Table.css';\r\nimport io from \"socket.io-client\";\r\n\r\nfunction Table() {\r\n  const [players, setPlayers] = useState([]);\r\n  const [poolMoney, setPoolMoney] = useState(0);\r\n  const [username, setUsername] = useState(\"\"); // Store username here\r\n  const numberOfPlayers = players.length;\r\n\r\n  const handleStart = () => {\r\n    socket.emit(\"handleStart\"); // Emit handleStart event\r\n    window.location.reload(); // Reload page to reflect updated data\r\n  };\r\n\r\n  const handleChaal = () => {\r\n    socket.emit(\"handleChaal\", username); // Emit handleChaal with the current username\r\n  };\r\n\r\n  useEffect(() => {\r\n    const newSocket = io(\"http://localhost:9000\");\r\n\r\n    // Listen for playerHistory event from the backend\r\n    newSocket.on(\"playerHistory\", (playerHistory) => {\r\n      setPlayers(playerHistory);\r\n      \r\n      // Optionally, you could set the username here if the username is part of the player object\r\n      const player = playerHistory.find((p) => p.id === newSocket.id);\r\n      if (player) {\r\n        setUsername(player.userName); // Set username after player connects\r\n      }\r\n    });\r\n\r\n    // Listen for poolMoney event from the backend\r\n    newSocket.on(\"poolMoney\", (pool_money) => {\r\n      setPoolMoney(pool_money);\r\n    });\r\n\r\n    return () => {\r\n      newSocket.disconnect(); // Clean up the connection on component unmount\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"table_block\">\r\n      <div className=\"table_container\">\r\n        <img src=\"/images/table_image.png\" alt=\"Table Image\" className=\"table_image\" />\r\n        <div className=\"players_list\">\r\n          {players.map((player, index) => (\r\n            <p key={index}>{player.userName}: {player.money}</p>\r\n          ))}\r\n          <button className=\"start\" onClick={handleStart}>Start</button>\r\n        </div>\r\n        <div className=\"pool_money\">{poolMoney}</div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <img src=\"/images/moves_image.png\" className=\"movesbg\" />\r\n        <div className=\"moves_block\">\r\n          <div className=\"first_section\">\r\n            <button className=\"first\" onClick={handleChaal}>Chaal</button>\r\n            <button className=\"second\">Second</button>\r\n          </div>\r\n\r\n          <div className=\"second_section\">\r\n            <text className=\"score\">750</text>\r\n            <text className=\"status\">Seen</text>\r\n            <text>{username}'s Turn</text>\r\n          </div>\r\n\r\n          <div className=\"third_section\">\r\n            <button className=\"third\">2x Chaal</button>\r\n            <button className=\"fourth\">Fourth</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}